
import ControlLayer.QuestionCtrl;
import ControlLayer.StringException;
import ModelLayer.Question;
import java.awt.Dimension;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.ObjectOutputStream;
import java.util.Scanner;
import javax.swing.JOptionPane;

/* 
*
*/
public class updateQuestion extends javax.swing.JFrame {

    private deleteOrUpdate dOu;
    private QuestionCtrl questionCtrl;
    private OptionsMenu optionsMenu;
    private ShowAllQuestions show;
    /**
     * Creates new form updateQuestion
     */
    public updateQuestion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchQuestion = new javax.swing.JButton();
        showAll = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        goBack = new javax.swing.JButton();
        addFrom = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        searchQuestion.setText("Намери въпрос");
        searchQuestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try{
					searchQuestionActionPerformed(evt);
				}catch(StringException e){
					e.Message();
				}
            }
        });

        showAll.setText("Покажи всички");
        showAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAllActionPerformed(evt);
            }
        });

        goBack.setText("Назад");
        goBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBackActionPerformed(evt);
            }
        });

        addFrom.setText("Добави от файл");
        addFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
               try{
					addFromActionPerformed(evt);
				}catch(StringException e){
					e.Message(); 
				}
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(72, 72, 72)
                        .addComponent(showAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(searchText)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(addFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(162, 162, 162)
                                .addComponent(goBack, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showAll, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                    .addComponent(searchQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(goBack, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(addFrom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addFrom, goBack});

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * 
     * @return the size of the current frame
     */
    private Dimension getDimension() {
        return this.getSize();
    }
    /**
     * Opens the specified menu
     * @param quest 
     */
    private void openUpdateDeleteMenu(Question quest) {
        dOu = new deleteOrUpdate();
        dOu.setSize(getDimension());
        this.setVisible(false);
        dOu.setVisible(true);
    }
  /**
   * Checks whether the desired question exists in the collection 
   * @param search
   * @return the question found
   */
  protected Question findDesiredQuestion(String search){
        for (Question quest : questionCtrl.getQuestions()) {
            if (quest.toString().contains(search)) {
            if(this.isVisible()){
                     openUpdateDeleteMenu(quest);
                }
                return quest;
            }    
    }
        return null;
  }
  /**
   * Searches the collection for the specified question 
   * @param evt the event triggered that method 
   * @throws StringException if the field is left empty
   */
    private void searchQuestionActionPerformed(java.awt.event.ActionEvent evt) throws StringException {//GEN-FIRST:event_searchQuestionActionPerformed
        questionCtrl = new QuestionCtrl();
        StringException me = new StringException();
        String search = searchText.getText();
        if (!me.StringLength(search)) {
            throw new StringException();
        } else {
             findDesiredQuestion(search);
                }
            if (this.isVisible()) {
                JOptionPane.showMessageDialog(null, "Няма намерен въпрос", "Въпросът който търсите не съществува",
                        JOptionPane.INFORMATION_MESSAGE);
            }
    }//GEN-LAST:event_searchQuestionActionPerformed
    /**
     * Showing all the content of the question collection
     * @param evt 
     */
    private void showAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAllActionPerformed
        show = new ShowAllQuestions();
        show.setVisible(true);
        show.Show();
    }//GEN-LAST:event_showAllActionPerformed
    /**
     * Returns to the previous menu
     * @param evt 
     */
    private void goBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBackActionPerformed
        optionsMenu = new OptionsMenu();
        this.setVisible(false);
        optionsMenu.setVisible(true);
        optionsMenu.setSize(getDimension());
    }//GEN-LAST:event_goBackActionPerformed

    private void addFromActionPerformed(java.awt.event.ActionEvent evt) throws StringException {//GEN-FIRST:event_addFromActionPerformed
        questionCtrl = new QuestionCtrl();
        ObjectOutputStream out = null;
        Scanner reader = null;
        try {
                reader = new Scanner(new File("src/новиВъпроси.txt"), "UTF8");
            } catch (FileNotFoundException | NullPointerException ex ) {
                throwMessage();
            }
        try{
            while (reader.hasNextLine()) {
                String question = reader.nextLine();
                Question quest = questionCtrl.createQuestion(question);
                if (!question.isEmpty()) {
                    for (int i = 0; i < 4; i++) {
                        questionCtrl.addAnswer(quest, reader.nextLine());
                    }
                        questionCtrl.addQuestion(quest);
                }
            }
             reader.close();
        }catch(NullPointerException e){
            JOptionPane.showMessageDialog(null, "Грешка при работата с файла", "Вероятно сте въвели по-малко редове от нужното",
                        JOptionPane.INFORMATION_MESSAGE);
        }
                JOptionPane.showMessageDialog(null, "Въпросите добавени успешно", "Успешно",
                        JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_addFromActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFrom;
    private javax.swing.JButton goBack;
    private javax.swing.JButton searchQuestion;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton showAll;
    // End of variables declaration//GEN-END:variables

    private void throwMessage() {
        JOptionPane.showMessageDialog(null, "Неочаквана грешка", "Грешка при работата с файл",
                JOptionPane.ERROR_MESSAGE);
    }
}
